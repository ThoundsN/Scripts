#!/bin/bash

rootpath="/root/OneDrive/output/massdnsfull"
massdns_full_path="/tmp/massdnsfull"
wordlist="/root/Wordlist/subdomain/726w_subdomain.txt"
time=$(date +'%Y-%m-%d-%H-%M')

mkdir -p /root/log


usage(){
  echo " usage:
   -d  : domain name  ;
    " 1>&2;
  exit 1
}


while getopts  ":d:" option ;
do
    case $option in
        d) domain=$OPTARG
            ;;

        *) usage
          exit 1
            ;;
    esac
done
shift $((OPTIND-1))

log_file="/root/log/${time}_$(basename $0)_${domain}.log"

exec &> >(tee -a $log_file)

domainpath=$rootpath/$domain

massdns_output_path="$domainpath/second_result/${time}_massdns_second_full.txt"

tmp_SR_file="/tmp/${time}_SR_${domain}.txt"

dig_result_resolvers_name="${time}_${domain}_resolvers.txt"
dig_result_resolvers_path=$domainpath/resolvers/$dig_result_resolvers_name

valid_SR_file_name=${time}_SR_${domain}_valid.txt
valid_SR_file_path=$domainpath/$valid_SR_file_name



sed_domain_record(){
  echo "sed $1 to $2"
  sed -n '/REFUSED/{n; n; n; n ; p}' $1 | awk '{print $1}' > $2
  echo "sed $1 to $2"
  sed -n '/SERVFAIL/{n; n; n; n ; p}' $1 | awk '{print $1}' > $2
}

dig_domain_file(){
  while read p; do
    echo "debug:  dig $p"
    answer=$(dig $p +short ns)
     if [[ ! -z $answer ]]; then
       echo $answer>> $2
       echo "Find NS SERVER:  $answer"
       echo $p >> $3
       echo "Find possible vulnerable subdomain: $p"
     fi
done < "$1"
}

clear(){
    rm -rf $massdns_full_path/$domain
}

check_aws(){
  resp=$(dig $domain ns)
  echo $resp
  echo
  echo
  if [[ ! $resp =~ "aws" ]]; then
     echo "This domain doesn't use aws, no need to do further check "
     exit 0
  fi
}

main(){
check_aws

echo "Starting to massdns targeted $domain"
massdns_one -w $wordlist -t F -d $domain

echo
echo

file=$(ls -t $massdns_full_path/$domain/*full* | head -1 )

touch $tmp_SR_file
sed_domain_record $file $tmp_SR_file
mkdir -p $domainpath/resolvers
touch $dig_result_resolvers_path
touch $valid_SR_file_path

dig_domain_file $tmp_SR_file  $dig_result_resolvers_path   $valid_SR_file_path


if [ -s $valid_SR_file_path ]; then
  mkdir -p $domainpath/second_result/

  echo "Last stage: Resolving possible delegated subdomain using NS server found previously"
  echo
  echo

  massdns -r $dig_result_resolvers_path -t A -o F $valid_SR_file_path --outfile $massdns_output_path
else
   echo "It seems there aren't any possible subdomain delegation"
fi

clear
}

main
