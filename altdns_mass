#!/bin/bash

rootpath="/root/OneDrive/output"

usage(){
  echo " usage:
  This script will use altdns to create permutation of subdomain for every domain under the subdomain directory, and then use massdns to resolve the output recurisively.

  -d: name of apex directory
  -w :keyword which name targeted files  contain .
  ------------------
  optional argument -l: domain list to search under apex directory, if null then search all domain
    " 1>&2;
  exit 1
}


while getopts  ":d:w:l:" option ;
do
    case $option in
        d) directory=$OPTARG
          ;;
        w) keyword=$OPTARG
            ;;
        l) domainlist=$OPTARG
            ;;
        *) usage
          exit 1
            ;;
    esac
done
shift $((OPTIND-1))


subdomainpath=$rootpath/$directory

resolve_altdns_output(){
  massdns -r /root/Wordlist/resolver.txt -t A -o S $1 --outfile $2
}

altdns_dir(){

  dir=$1
  echo "debug: dir      $1"
  mkdir -p "$rootpath/alt_mass/$(basename $dir)"
  fileinput=$(ls -t $dir/*$keyword* | head -1 )
  echo "debug:  fileinput    $fileinput"
  altdns_output="$rootpath/alt_mass/$(basename $dir)/altdns_$(basename $fileinput)"
  echo "debug:  altdns_output    $altdns_output"
  touch $altdns_output

  altdns -i $fileinput -o  $altdns_output -w "/root/Wordlist/altdnsword.txt"

  chmod 777 $altdns_output

  mkdir -p "$rootpath/alt_mass/$(basename $dir)/"

  massdns_output="$rootpath/alt_mass/$(basename $dir)/massdns_alt_$(basename $fileinput)"
  touch $massdns_output
  echo "debug massdns output $massdns_output"


  resolve_altdns_output $altdns_output $massdns_output

  echo
  echo
  echo
  echo
}

if [[ -z ${domainlist+x} ]]; then
  for dir in $subdomainpath/* ; do
    echo "debug: domain = $dir "
    altdns_dir $dir
  done
else
  sed 's/[[:blank:]]*$//' $domainlist
  while read p ; do
      echo "debug: $subdomainpath/$p"
      altdns_dir "$subdomainpath/$p"
  done < "$domainlist"
fi
